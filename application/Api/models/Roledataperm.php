<?php/* * To change this license header, choose License Headers in Project Properties. * To change this template file, choose Tools | Templates * and open the template in the editor. *//** * Description of Roledataperm * * @author zhongyg */class RoledatapermModel extends PublicModel {    //put your code here    protected $tableName = 'role_data_perm';    Protected $autoCheckFields = true;    public function __construct($str = '') {        parent::__construct($str = '');    }    /**     * 获取列表     * @param mix $data; 条件     * @return mix     * @author zyg     */    public function getlist($olddata, $limit, $order = 'id desc') {        if (is_string($olddata)) {            $data = [$olddata];        } elseif (!$olddata) {            $data = [];        }        if (isset($data['role_id'])) {            $arr['role_id'] = intval($data['role_id']);        }        if (isset($data['data_perm_id'])) {            $arr['data_perm_id'] = intval($data['data_perm_id']);        }        if (isset($data['data_perm_id'])) {            $arr['data_perm_id'] = intval($data['data_perm_id']);        }        if (isset($data['op_perm'])) {            $arr['op_perm'] = ['like', '%' . $data['op_perm'] . '%'];        }        if (isset($data['perm_flag'])) {            $arr['perm_flag'] = $data['perm_flag'] == 'Y' ? 'Y' : 'N';        }        try {            if (!empty($limit)) {                return $this->field('id,role_id,data_perm_id,op_perm,perm_flag')                                ->where($data)                                ->limit($limit['page'] . ',' . $limit['num'])                                ->order($order)                                ->select();            } else {                return $this->field('id,role_id,data_perm_id,op_perm,perm_flag')                                ->where($data)                                ->order($order)                                ->select();            }        } catch (Exception $ex) {            Log::write($ex->getMessage());            return false;        }    }    /**     * 获取想起     * @param  int  $id     * @return mix     * @author zyg     */    public function detail($id = '') {        $where['id'] = $id;        if (!empty($where['id'])) {            try {                $row = $this->where($where)                        ->field('id,role_id,data_perm_id,op_perm,perm_flag')                        ->find();                return $row;            } catch (Exception $ex) {                Log::write($ex->getMessage());                return false;            }        } else {            return false;        }    }    /**     * 删除数据     * @param  int $id id     * @return bool     * @author zyg     */    public function delete_data($id = '') {        $where['id'] = $id;        try {            if (!empty($where['id'])) {                return $this->where($where)                                ->delete();            } else {                return false;            }        } catch (Exception $ex) {            Log::write($ex->getMessage());            return false;        }    }    /**     * 更新数据     * @param  int $id id     * @return bool     * @author zyg     */    public function update_data($data, $where) {        if (isset($data['role_id'])) {            $arr['role_id'] = intval($data['role_id']);        }        if (isset($data['data_perm_id'])) {            $arr['data_perm_id'] = intval($data['data_perm_id']);        }        if (isset($data['data_perm_id'])) {            $arr['data_perm_id'] = intval($data['data_perm_id']);        }        if (isset($data['op_perm'])) {            $arr['op_perm'] = $data['op_perm'];        }        if (isset($data['perm_flag'])) {            $arr['perm_flag'] = $data['perm_flag'] == 'Y' ? 'Y' : 'N';        }        try {            if (!empty($where)) {                return $this->where($where)->save($arr);            } else {                return false;            }        } catch (Exception $ex) {            Log::write($ex->getMessage());            return false;        }    }    /**     * 新增数据     * @param  mix $create 新增条件     * @return bool or int      * @author zyg     */    public function create_data($create = []) {        if (isset($data['role_id'])) {            $arr['role_id'] = intval($data['role_id']);        }        if (isset($data['data_perm_id'])) {            $arr['data_perm_id'] = intval($data['data_perm_id']);        }        if (isset($data['data_perm_id'])) {            $arr['data_perm_id'] = intval($data['data_perm_id']);        }        if (isset($data['op_perm'])) {            $arr['op_perm'] = $data['op_perm'];        }        if (isset($data['perm_flag'])) {            $arr['perm_flag'] = $data['perm_flag'] == 'Y' ? 'Y' : 'N';        }        try {            $data = $this->create($arr);            return $this->add($data);        } catch (Exception $ex) {            Log::write($ex->getMessage());            return false;        }    }}